- name: Validate variables
  import_tasks: ./assert.yml

- name: Temporary directory for operations
  tempfile:
    state: directory
  register: workspace

- name: Download CA private key
  aws_s3:
    bucket: "{{ sft_metrics_ca_private_key_s3_bucket }}"
    object: "{{ sft_metrics_ca_private_key_s3_path }}"
    dest: "{{ workspace.path }}/ca-key.pem"
    mode: get
  ignore_errors: yes
  register: get_ca_private_key
- name: Create CA private key
  import_tasks: ca-private-key.yml
  when: get_ca_private_key.failed

- name: Download CA cert
  aws_s3:
    bucket: "{{ sft_metrics_ca_cert_s3_bucket }}"
    object: "{{ sft_metrics_ca_cert_s3_path }}"
    dest: "{{ workspace.path }}/ca-cert.pem"
    mode: get
  ignore_errors: yes
  register: get_ca_cert
- name: Create CA cert
  import_tasks: ca-cert.yml
  when: get_ca_cert.failed

- name: Download client private key
  aws_s3:
    bucket: "{{ sft_metrics_client_s3_bucket }}"
    object: "{{ sft_metrics_client_private_key_s3_path }}"
    dest: "{{ workspace.path }}/client-key.pem"
    mode: get
  ignore_errors: yes
  register: get_client_private_key
- name: Create client private key
  import_tasks: client-private-key.yml
  when: get_client_private_key.failed

- name: Download client cert
  aws_s3:
    bucket: "{{ sft_metrics_client_s3_bucket }}"
    object: "{{ sft_metrics_client_cert_s3_path }}"
    dest: "{{ workspace.path }}/client-cert.pem"
    mode: get
  ignore_errors: yes
  register: get_client_cert
- name: Create client cert
  import_tasks: client-cert.yml
  when: get_client_cert.failed
