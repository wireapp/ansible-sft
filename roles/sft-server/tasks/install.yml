- name: copying SFT artifact
  copy:
    src: "{{ sft_artifact_file_path }}"
    dest: "{{ SFT_ARTIFACT_TARGET_PATH }}"
  when:
    - sft_artifact_file_path is defined
    - sft_version is not defined
    - sft_artifact_file_url is not defined
    - sft_artifact_checksum is not defined

- name: downloading SFT artifact by version
  # get_url
  debug:
    msg: "TODO"
  when:
    - sft_version is defined
    - sft_artifact_file_path is not defined
    - sft_artifact_file_url is not defined
    - sft_artifact_checksum is not defined

- name: downloading SFT artifact by URL
  # get_url
  debug:
    msg: "TODO"
  when:
    - sft_artifact_file_url is defined
    - sft_artifact_checksum is defined
    - sft_artifact_file_path is not defined
    - sft_version is not defined


- name: unpacking artifact
  unarchive:
    remote_src: yes
    src: "{{ SFT_ARTIFACT_TARGET_PATH }}"
    dest: '/tmp/'
    list_files: yes
  register: unpacked

- name: copying executable to right location
  copy:
    src: "{{ unpacked.dest }}{{ unpacked.files[0] }}"
    remote_src: yes
    dest: "{{ SFT_BIN_PATH }}"
  register: binary_sftd

- name: ensuring executable state
  file:
    path: "{{ SFT_BIN_PATH }}"
    state: 'file'
    owner: "{{ SFTD_USER }}"
    group: "{{ SFTD_GROUP }}"
    mode: '550'

- name: copying systemd service unit
  template:
    src: 'sftd.unit.j2'
    dest: "/etc/systemd/system/{{ service_name }}.service"
    owner: root
    group: root
    mode: '644'
  register: unit_sftd


- name: installing core-dump components
  apt:
    state: present
    update_cache: yes
    name:
      - systemd-coredump
  when:
    - sft_coredump_enabled | bool


# docs: https://www.nginx.com/resources/wiki/start/topics/tutorials/install/
- name: adding key for nginx's apt repositpry
  apt_key:
    id: 'ABF5BD827BD9BF62'
    url: "https://nginx.org/keys/nginx_signing.key"
    state: present

- name: adding nginx's apt repositpry
  apt_repository:
    repo: "deb https://nginx.org/packages/{{ ansible_facts.distribution | lower }}/ {{ ansible_distribution_release | lower }} nginx"
    state: present
    update_cache: yes

- name: installing nginx packages
  apt:
    state: present
    name:
      - nginx


- name: adding certbot repository
  apt_repository:
    repo: 'ppa:certbot/certbot'
    state: present
    update_cache: yes
  when:
    - certbot_enabled

- name: installing certbot
  apt:
    state: present
    name:
      - certbot
  when:
    - certbot_enabled


- name: installing ufw
  apt:
    state: present
    name:
      - ufw
