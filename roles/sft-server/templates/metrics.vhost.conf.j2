server {
    server_name {{ sft_fqdn }};

    listen {{ sft_nginx_metrics_port }} ssl http2;
    listen [::]:{{ sft_nginx_metrics_port }} ssl http2;


    access_log  off;


    # NOTE: intermediate configuration, still TBD!
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    ssl_certificate_key {% if certbot_enabled %}{{ certbot_live_path }}/{{ sft_fqdn }}/privkey.pem{% else %}{{ tls_key_path }}{% endif %};
    ssl_certificate {% if certbot_enabled %}{{ certbot_live_path }}/{{ sft_fqdn }}/fullchain.pem{% else %}{{ tls_cert_path }}{% endif %};
    ssl_dhparam {{ nginx_dhparams_path }};

    ssl_session_timeout 1d;
    ssl_session_cache shared:le_nginx_SSL:1m;
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # HSTS (in seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    ssl_client_certificate {{ sft_metrics_ca_path }};
    ssl_verify_client      on;

    location /metrics/sft {
        rewrite .* /metrics break;
        proxy_pass http://127.0.0.1:{{ sftd_metrics_port }};

        # NOTE: explicitly get rid of any cookie to prevent exposure to sftd
        proxy_set_header Cookie "";
    }

    location /metrics/node-exporter {
        rewrite .* /metrics break;
        proxy_pass http://127.0.0.1:{{ sft_node_exporter_port }};

        # NOTE: explicitly get rid of any cookie to prevent exposure to sftd
        proxy_set_header Cookie "";
    }
}
