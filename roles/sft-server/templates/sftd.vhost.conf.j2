{% if (sft_nginx_rate_limit_enabled | bool) -%}
limit_req_zone "$binary_remote_addr$uri" zone=reqs_per_addr:12m rate={{ sft_nginx_rate_limit_requests_per_second }}r/s;
limit_conn_zone "$binary_remote_addr$uri" zone=conns_per_addr:10m;
{%- endif %}


server {
    server_name {{ sft_fqdn }};

    listen {{ sft_nginx_sft_port }} ssl http2;
    listen [::]:{{ sft_nginx_sft_port }} ssl http2;


    access_log  off;


    # NOTE: These cipher suites are compliant to TR-02102-2. If you need to override them, please open a PR to introduce this functionality.
    # For TR-02102-2 see https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/TechGuidelines/TG02102/BSI-TR-02102-2.html
    # As a Wire employee, for Wire-internal discussions and context see
    # * https://wearezeta.atlassian.net/browse/FS-33
    # * https://wearezeta.atlassian.net/browse/FS-444
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;

    ssl_certificate_key {% if certbot_enabled %}{{ certbot_live_path }}/{{ sft_fqdn }}/privkey.pem{% else %}{{ tls_key_path }}{% endif %};
    ssl_certificate {% if certbot_enabled %}{{ certbot_live_path }}/{{ sft_fqdn }}/fullchain.pem{% else %}{{ tls_cert_path }}{% endif %};
    ssl_dhparam {{ nginx_dhparams_path }};

    ssl_session_timeout 1d;
    ssl_session_cache shared:le_nginx_SSL:1m;
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;


    # HSTS (in seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;


    # NOTE: 'Too Many Requests' (429) is returned on throttling
    limit_req_status 429;
    limit_conn_status 429;

    # NOTE: refusal ends up as 'error' while delays will be marked as 'warn'
    limit_req_log_level error;
    limit_conn_log_level error;

    {% if (sft_nginx_rate_limit_enabled | bool) -%}
    limit_req zone=reqs_per_addr burst={{ sft_nginx_rate_limit_burst_until }} nodelay;
    limit_conn conns_per_addr {{ sft_nginx_rate_limit_max_connection_per_address }};
    {%- endif %}


    location / {
        proxy_pass http://127.0.0.1:{{ sftd_signaling_port }};

        # TODO: should this be open to any third party?
        add_header Access-Control-Allow-Origin '*' always;

        # NOTE: explicitly get rid of any cookie to prevent exposure to sftd
        proxy_set_header Cookie "";
    }
}
